//
// Created by sauci on 03/12/2018.
//

#ifndef XCPUI_USB_INTERFACE_PEAK_TYPES_H
#define XCPUI_USB_INTERFACE_PEAK_TYPES_H

#include <cstdint>

typedef enum : std::uint16_t
{
    CHANNEL_BUS_NONE = 0x00u,
    CHANNEL_BUS_USB_1 = 0x51u,
    CHANNEL_BUS_USB_2 = 0x52u,
    CHANNEL_BUS_USB_3 = 0x53u,
    CHANNEL_BUS_USB_4 = 0x54u,
    CHANNEL_BUS_USB_5 = 0x55u,
    CHANNEL_BUS_USB_6 = 0x56u,
    CHANNEL_BUS_USB_7 = 0x57u,
    CHANNEL_BUS_USB_8 = 0x58u,
    CHANNEL_BUS_USB_9 = 0x509u,
    CHANNEL_BUS_USB_10 = 0x50Au,
    CHANNEL_BUS_USB_11 = 0x50Bu,
    CHANNEL_BUS_USB_12 = 0x50Cu,
    CHANNEL_BUS_USB_13 = 0x50Du,
    CHANNEL_BUS_USB_14 = 0x50Eu,
    CHANNEL_BUS_USB_15 = 0x50Fu,
    CHANNEL_BUS_USB_16 = 0x510u
} TPCANHandle;

typedef enum : std::uint8_t
{
    PCAN_DEVICE_NUMBER = 0x01U,
    PCAN_5VOLTS_POWER = 0x02U,
    PCAN_RECEIVE_EVENT = 0x03U,
    PCAN_MESSAGE_FILTER = 0x04U,
    PCAN_API_VERSION = 0x05U,
    PCAN_CHANNEL_VERSION = 0x06U,
    PCAN_BUSOFF_AUTORESET = 0x07U,
    PCAN_LISTEN_ONLY = 0x08U,
    PCAN_LOG_LOCATION = 0x09U,
    PCAN_LOG_STATUS = 0x0AU,
    PCAN_LOG_CONFIGURE = 0x0BU,
    PCAN_LOG_TEXT = 0x0CU,
    PCAN_CHANNEL_CONDITION = 0x0DU,
    PCAN_HARDWARE_NAME = 0x0EU,
    PCAN_RECEIVE_STATUS = 0x0FU,
    PCAN_CONTROLLER_NUMBER = 0x10U,
    PCAN_TRACE_LOCATION = 0x11U,
    PCAN_TRACE_STATUS = 0x12U,
    PCAN_TRACE_SIZE = 0x13U,
    PCAN_TRACE_CONFIGURE = 0x14U,
    PCAN_CHANNEL_IDENTIFYING = 0x15U,
    PCAN_CHANNEL_FEATURES = 0x16U,
    PCAN_BITRATE_ADAPTING = 0x17U,
    PCAN_BITRATE_INFO = 0x18U,
    PCAN_BITRATE_INFO_FD = 0x19U,
    PCAN_BUSSPEED_NOMINAL = 0x1AU,
    PCAN_BUSSPEED_DATA = 0x1BU,
    PCAN_IP_ADDRESS = 0x1CU,
    PCAN_LAN_SERVICE_STATUS = 0x1DU,
    PCAN_ALLOW_STATUS_FRAMES = 0x1EU,
    PCAN_ALLOW_RTR_FRAMES = 0x1FU,
    PCAN_ALLOW_ERROR_FRAMES = 0x20U,
    PCAN_INTERFRAME_DELAY = 0x21U,
    PCAN_ACCEPTANCE_FILTER_11BIT = 0x22U,
    PCAN_ACCEPTANCE_FILTER_29BIT = 0x23U,
    PCAN_IO_DIGITAL_CONFIGURATION = 0x24U,
    PCAN_IO_DIGITAL_VALUE = 0x25U,
    PCAN_IO_DIGITAL_SET = 0x26U,
    PCAN_IO_DIGITAL_CLEAR = 0x27U,
    PCAN_IO_ANALOG_VALUE = 0x28U
} TPCANParameter;

typedef enum : std::uint32_t
{
    PCAN_ERROR_OK = 0x00000U,
    PCAN_ERROR_XMTFULL = 0x00001U,
    PCAN_ERROR_OVERRUN = 0x00002U,
    PCAN_ERROR_BUSLIGHT = 0x00004U,
    PCAN_ERROR_BUSHEAVY = 0x00008U,
    PCAN_ERROR_BUSWARNING = PCAN_ERROR_BUSHEAVY,
    PCAN_ERROR_BUSPASSIVE = 0x40000U,
    PCAN_ERROR_BUSOFF = 0x00010U,
    PCAN_ERROR_ANYBUSERR = (PCAN_ERROR_BUSWARNING |
                            PCAN_ERROR_BUSLIGHT |
                            PCAN_ERROR_BUSHEAVY |
                            PCAN_ERROR_BUSOFF |
                            PCAN_ERROR_BUSPASSIVE),
    PCAN_ERROR_QRCVEMPTY = 0x00020U,
    PCAN_ERROR_QOVERRUN = 0x00040U,
    PCAN_ERROR_QXMTFULL = 0x00080U,
    PCAN_ERROR_REGTEST = 0x00100U,
    PCAN_ERROR_NODRIVER = 0x00200U,
    PCAN_ERROR_HWINUSE = 0x00400U,
    PCAN_ERROR_NETINUSE = 0x00800U,
    PCAN_ERROR_ILLHW = 0x01400U,
    PCAN_ERROR_ILLNET = 0x01800U,
    PCAN_ERROR_ILLCLIENT = 0x01C00U,
    PCAN_ERROR_ILLHANDLE = (PCAN_ERROR_ILLHW |
                            PCAN_ERROR_ILLNET |
                            PCAN_ERROR_ILLCLIENT),
    PCAN_ERROR_RESOURCE = 0x02000U,
    PCAN_ERROR_ILLPARAMTYPE = 0x04000U,
    PCAN_ERROR_ILLPARAMVAL = 0x08000U,
    PCAN_ERROR_UNKNOWN = 0x10000U,
    PCAN_ERROR_ILLDATA = 0x20000U,
    PCAN_ERROR_CAUTION = 0x2000000U,
    PCAN_ERROR_INITIALIZE = 0x4000000U,
    PCAN_ERROR_ILLOPERATION = 0x8000000U
} TPCANStatus;

#endif //XCPUI_USB_INTERFACE_PEAK_TYPES_H
